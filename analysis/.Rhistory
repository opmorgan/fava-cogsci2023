labs(title = "Field x Level (RT)", x = "Level", y = "RVF-LVF, Local - Global RT (ms)")
g <- g |> gg_style_means() |> gg_color() + theme(axis.text.x = element_blank())
ggsave(fig_path, g, "png", height = 4, width = 4)
g2 <- g
}
g
#include_graphics(fig_path)
g
g_both <- g1 + g2
g_both
g <- g |> gg_style_means() |> gg_color() +
theme(axis.text.x = element_blank(), aspect.ratio = 2/4)
g
fig_path <- here(fig_dir, "rt_1_subjects.png")
if (use_cached_rtfigs == FALSE) {
## Make a table showing:
## For each subject and field, the difference in median rt for:
## Global - Local
rt_1 <- rt_subject |>
pivot_wider(names_from = c(field, level),
values_from = rt) |>
mutate(LVF_Global_Bias = (RVF_Global - RVF_Local) - (LVF_Global - LVF_Local)) |>
mutate(all_one_group = "all_one_group")
rt_descriptive <- rt_1 |>
group_by(all_one_group) |>
summarize(
median = median(LVF_Global_Bias),
mean = mean(LVF_Global_Bias),
SE = sd(LVF_Global_Bias) / sqrt(length((LVF_Global_Bias)))
)
rt_descriptive
g <- ggplot(rt_1, aes(
x = all_one_group,
y = LVF_Global_Bias,
fill = plot_colors[[3]],
color = plot_colors[[3]]
)) +
geom_quasirandom(alpha = .1, show.legend = F) +
geom_boxplot(
alpha = 0.5,
size = 0.3,
varwidth = F,
outlier.shape = NA,
color = "gray20",
show.legend = F
) +
stat_summary(
fun.data = mean_cl_normal,
fun.args = list(conf.int = 0.95),
geom = "errorbar",
position = "dodge",
linetype = 1,
color = "gray5",
width = .2,
# size = point_size / 5,
show.legend = F
) +
geom_point(
data = rt_descriptive,
aes(y = mean),
color = "black",
shape = 21,
show.legend = F
) +
scale_y_continuous(minor_breaks = seq(-500 , 500, 50),
breaks = seq(-500, 500, 100)) +
theme(axis.text.x = element_blank()) +
labs(title = "Field x Level (RT)", x = "Level", y = "RVF-LVF, Local - Global RT (ms)")
g <- g |> gg_style_means() |> gg_color() +
theme(axis.text.x = element_blank(), aspect.ratio = 2/4)
g
ggsave(fig_path, g, "png", height = 4, width = 4)
g2 <- g
}
#include_graphics(fig_path)
g <- g |> gg_style_means() |> gg_color() +
theme(axis.text.x = element_blank(), aspect.ratio = 4/2)
g
g <- g |> gg_style_means() |> gg_color() +
theme(axis.text.x = element_blank(), aspect.ratio = 4/1)
g
g2 <- g
g_both <- g1 + g2
g_both
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 1, 2))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 1, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 2))
g1 + g2
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, 0, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, 0, .5))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, -1, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, 1, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, 5, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, -5, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, -2, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, -1, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(1, -.5, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, -.5, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, -1, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, -.25, 4))
g1 + g2
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, -.25, 2))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 2))
ggsave(fig_path, g_both, "png", height = 4, width = 8)
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 10))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, -.5, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g <- ggplot(rt_1, aes(
x = all_one_group,
y = LVF_Global_Bias,
fill = plot_colors[[3]],
color = plot_colors[[3]]
)) +
geom_quasirandom(alpha = .1, show.legend = F) +
geom_boxplot(
alpha = 0.5,
size = 0.3,
varwidth = F,
outlier.shape = NA,
color = "gray20",
show.legend = F
) +
stat_summary(
fun.data = mean_cl_normal,
fun.args = list(conf.int = 0.95),
geom = "errorbar",
position = "dodge",
linetype = 1,
color = "gray5",
width = .2,
# size = point_size / 5,
show.legend = F
) +
geom_point(
data = rt_descriptive,
aes(y = mean),
color = "black",
shape = 21,
show.legend = F
) +
scale_y_continuous(minor_breaks = seq(-500 , 500, 50),
breaks = seq(-500, 500, 100)) +
theme(axis.text.x = element_blank()) +
labs(title = "LVF>RVF GLobal Bias (RT)", x = "Level", y = "RVF-LVF, Local - Global RT (ms)")
g <- g |> gg_style_means() |> gg_color() +
theme(axis.text.x = element_blank(), aspect.ratio = 4/1)
g2 <- g
g1 + g2
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + g2
g <- ggplot(rt_1, aes(
x = all_one_group,
y = LVF_Global_Bias,
fill = plot_colors[[3]],
color = plot_colors[[3]]
)) +
geom_quasirandom(alpha = .1, show.legend = F) +
geom_boxplot(
alpha = 0.5,
size = 0.3,
varwidth = F,
outlier.shape = NA,
color = "gray20",
show.legend = F
) +
stat_summary(
fun.data = mean_cl_normal,
fun.args = list(conf.int = 0.95),
geom = "errorbar",
position = "dodge",
linetype = 1,
color = "gray5",
width = .2,
# size = point_size / 5,
show.legend = F
) +
geom_point(
data = rt_descriptive,
aes(y = mean),
color = "black",
shape = 21,
show.legend = F
) +
scale_y_continuous(minor_breaks = seq(-500 , 500, 50),
breaks = seq(-500, 500, 100)) +
theme(axis.text.x = element_blank()) +
labs(title = "LVF>RVF Global Bias (RT)", x = "Level", y = "RVF-LVF, Local - Global RT (ms)")
g <- g |> gg_style_means() |> gg_color() +
theme(axis.text.x = element_blank(), aspect.ratio = 4/1)
g2 <- g
g1 + g2
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + g2
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + (g2 + theme(plot.margin = c(0, 0, 0, 1))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + (g2 + theme(plot.margin = c(0, 0, 0, 1)))
g1 + (g2 + theme(plot.margin = unit(c(0, 0, 0, 1)))
g1 + plot_spacer() + g2 + plot_layout(widths = c(4, 0, 4))
g1 + (g2 + theme(plot.margin = unit(c(0, 0, 0, 1))
g1 + (g2 + theme(plot.margin = unit(c(0, 0, 0, 1))))
g2 + theme(plot.margin = unit(c(0, 0, 0, 1)))
g2 + theme(plot.margin = unit(c(0, 0, 0, 1), "pts"))
g2 + theme(plot.margin = unit(c(0, 0, 0, 1), "pt"))
g1 + (g2 + theme(plot.margin = unit(c(0, 0, 0, 0))))
g2 + theme(plot.margin = unit(c(0, 0, 0, 0), "pt"))
g2 + theme(plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "pt"))
g2_padded <- g2 + theme(plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(5.5, 5.5, 5.5, 11), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 5.5, 5.5, 5.5), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 5.5, 5.5, 11), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 5.5, 5.5, 50), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 5.5, 50, 50), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 50, 5.5, 50), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 20, 5.5, 20), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 30, 5.5, 30), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 50, 5.5, 30), "pt"))
g1 + g2_padded
g2_padded <- g2 + theme(plot.margin = unit(c(10, 50, 5.5, 40), "pt"))
g1 + g2_padded
g1 + g2_padded + plot_annotation("test")
g1 + g2_padded + plot_annotation("test") + theme(plot.tag.position = "bottom"))
g1 + g2_padded + plot_annotation("test") & theme(plot.tag.position = "bottom"))
g1 + g2_padded + plot_annotation("test") & theme(plot.tag.position = "bottom")
g1 + g2_padded + plot_annotation("test") & theme(plot.tag.position= c(1, 0))
g1 + g2_padded + plot_annotation("test") & theme(plot.tag.position= c(1, 1))
g1 + g2_padded + plot_annotation(caption = "test") & theme(plot.tag.position= c(1, 1))
g2_padded <- g2 + theme(plot.margin = unit(c(10, 50, 5.5, 40), "pt"))
g_both <- g1 + g2_padded
g_both
fig_path_g4 <- here(fig_dir, "rt_1_subjects.png")
if (use_cached_rtfigs == FALSE) {
## Make a table showing:
## For each subject and field, the difference in median rt for:
## Global - Local
rt_1 <- rt_subject |>
pivot_wider(names_from = c(field, level),
values_from = rt) |>
mutate(LVF_Global_Bias = (RVF_Global - RVF_Local) - (LVF_Global - LVF_Local)) |>
mutate(all_one_group = "all_one_group")
rt_descriptive <- rt_1 |>
group_by(all_one_group) |>
summarize(
median = median(LVF_Global_Bias),
mean = mean(LVF_Global_Bias),
SE = sd(LVF_Global_Bias) / sqrt(length((LVF_Global_Bias)))
)
rt_descriptive
g <- ggplot(rt_1, aes(
x = all_one_group,
y = LVF_Global_Bias,
fill = plot_colors[[3]],
color = plot_colors[[3]]
)) +
geom_quasirandom(alpha = .1, show.legend = F) +
geom_boxplot(
alpha = 0.5,
size = 0.3,
varwidth = F,
outlier.shape = NA,
color = "gray20",
show.legend = F
) +
stat_summary(
fun.data = mean_cl_normal,
fun.args = list(conf.int = 0.95),
geom = "errorbar",
position = "dodge",
linetype = 1,
color = "gray5",
width = .2,
# size = point_size / 5,
show.legend = F
) +
geom_point(
data = rt_descriptive,
aes(y = mean),
color = "black",
shape = 21,
show.legend = F
) +
scale_y_continuous(minor_breaks = seq(-500 , 500, 50),
breaks = seq(-500, 500, 100)) +
theme(axis.text.x = element_blank()) +
labs(title = "LVF>RVF Global Bias (RT)", x = "Level", y = "RVF-LVF, Local - Global RT (ms)")
g <- g |> gg_style_means() |> gg_color() +
theme(axis.text.x = element_blank(), aspect.ratio = 4/1)
ggsave(fig_path_g4, g, "png", height = 4, width = 4)
g4 <- g
}
#include_graphics(fig_path_g4)
fig_path_g3 <- here(fig_dir, "rt_2_subjects.png")
if (use_cached_rtfigs == FALSE) {
## Make a table showing:
## For each subject and field, the difference in median rt for:
## Global - Local
rt_2 <- rt_subject |>
pivot_wider(names_from = c(level),
values_from = rt) |>
mutate(Global_Bias = Local - Global)
rt_descriptive <- rt_2 |>
group_by(field) |>
summarize(
median = median(Global_Bias),
mean = mean(Global_Bias),
SE = sd(Global_Bias) / sqrt(length((Global_Bias)))
)
g <- ggplot(rt_2, aes(x = field,
y = Global_Bias, color)) +
geom_quasirandom(
alpha = .1, show.legend = F,
color = plot_color) +
geom_boxplot(
alpha = 0.5,
size = 0.3,
varwidth = F,
outlier.shape = NA,
fill = plot_color,
color = "gray20",
show.legend = F
) +
stat_summary(
fun.data = mean_cl_normal,
fun.args = list(conf.int = 0.95),
geom = "errorbar",
position = "dodge",
linetype = 1,
color = "gray5",
width = .2,
show.legend = F
) +
geom_point(
data = rt_descriptive,
aes(y = mean),
fill = plot_color,
shape = 21,
show.legend = F
) +
scale_y_continuous(minor_breaks = seq(-500 , 500, 50),
breaks = seq(-500, 500, 100)) +
labs(title = "Global bias (RT)", x = "Level", y = "Local - Global RT (ms)")
g <- g |> gg_style_means()
ggsave(fig_path_g3, g, "png", height = 4, width = 4)
g3 <- g
}
#include_graphics(fig_path_g3)
fig_path_g34 <- here(fig_dir, "rt_2_both.png")
if (use_cached_rtfigs == FALSE) {
g4_padded <- g4 + theme(plot.margin = unit(c(10, 50, 5.5, 40), "pt"))
g_both <- g3 + g4_padded
ggsave(fig_path_g34, g_both, "png", height = 4, width = 8)
}
include_graphics(fig_path_g34)
g_both
g_234 <- g2 + g3 + g4
g_234
g2
## Plot data from every trial, with overall mean, median and bounds.
fig_path_g1 <- here(fig_dir, "rt_4_all.png")
if (use_cached_rtfigs == FALSE) {
aah_correct <- aah |> filter(correct == T) |>
mutate(level = recode(level, global = "Global", local = "Local"))
rt_descriptive <- aah_correct |>
group_by(field, level) |>
summarize(
median = median(rt),
mean = mean(rt),
SE = sd(rt) / sqrt(length((rt)))
)
## Facet by: Visual field
g <- ggplot(aah_correct, aes(
x = level,
y = rt,
fill = level,
color = level
)) +
geom_quasirandom(alpha = .05, show.legend = F) +
geom_boxplot(
alpha = 0.5,
size = 0.3,
varwidth = F,
outlier.shape = NA,
color = "gray20",
show.legend = F
) +
stat_summary(
fun.data = mean_cl_normal,
fun.args = list(conf.int = 0.95),
geom = "errorbar",
position = "dodge",
linetype = 1,
color = "gray5",
width = .3,
# size = point_size / 5,
show.legend = F
) +
geom_point(data = rt_descriptive, aes(y = mean), color = "black", shape = 21,
show.legend = F) +
scale_y_continuous(minor_breaks = seq(0 , 2000, 100),
breaks = seq(0, 2000, 200)) +
facet_wrap(~ field) +
labs(title = "All trials (RT)", x = "Level", y = "Reaction time (ms)")
g <- g |> gg_style_means() |> gg_color()
ggsave(fig_path_g1, g, "png", height = 4, width = 4)
g1 <- g
}
#include_graphics(fig_path_g1)
fig_path_g2 <- here(fig_dir, "rt_4_subjects.png")
if (use_cached_rtfigs == FALSE) {
rt_subject <- aah_correct |> group_by(subject, field, level) |>
summarize(rt = median(rt))
rt_descriptive <- rt_subject |>
group_by(field, level) |>
summarize(
median = median(rt),
mean = mean(rt),
SE = sd(rt) / sqrt(length((rt)))
)
g <- ggplot(rt_subject, aes(
x = level,
y = rt,
fill = level,
color = level
)) +
geom_quasirandom(alpha = .1, show.legend = F) +
geom_boxplot(
alpha = 0.5,
size = 0.3,
varwidth = F,
outlier.shape = NA,
color = "gray20",
show.legend = F
) +
stat_summary(
fun.data = mean_cl_normal,
fun.args = list(conf.int = 0.95),
geom = "errorbar",
position = "dodge",
linetype = 1,
color = "gray5",
width = .2,
# size = point_size / 5,
show.legend = F
) +
geom_point(
data = rt_descriptive,
aes(y = mean),
color = "black",
shape = 21,
show.legend = F
) +
scale_y_continuous(minor_breaks = seq(0 , 1500, 100),
breaks = seq(0, 1500, 200)) +
facet_wrap( ~ field) +
labs(title = "Per-subject medians (RT)", x = "Level", y = "Reaction time (ms)")
g <- g |>  gg_style_means() |> gg_color()
ggsave(fig_path_g2, g, "png", height = 4, width = 4)
g2 <- g
}
#include_graphics(fig_path_g2)
fig_path_g12 <- here(fig_dir, "rt_4_both.png")
if (use_cached_rtfigs == FALSE) {
g_both <- g1 + g2
ggsave(fig_path_g12, g_both, "png", height = 4, width = 8)
}
include_graphics(fig_path_g12)
g2
g_234 <- g2 + g3 + g4
g_234
g_234
g2
g3
g_234 <- g2 + g3 + g4 = plot_layout(widths = c(2, 1, 1))
g_234 <- g2 + g3 + g4 = plot_layout(widths = c(2, 1, 1))
g_234 <- g2 + g3 + g4 + plot_layout(widths = c(2, 1, 1))
g_234
g_234 <- g2 + g3 + g4 + plot_layout(widths = c(4, 2, 1))
g_234
g_234 <- g2 + g3 + g4_padded + plot_layout(widths = c(4, 2, 1))
g_234
g4_padded <- g4 + theme(plot.margin = unit(c(10, 40, 5.5, 40), "pt"))
g_both <- g3 + g4_padded
g_34 <- g3 + g4_padded
g34
g_34
g2 + g_34
g_234 <- g2 + g3 + g4_padded + plot_layout(widths = c(4, 2, 1), heights = 1, 1, 1)
g_234
g_234 <- g2 + g3 + g4_padded + plot_layout(widths = c(4, 2, 1), heights = c(1, 1, 1))
g_234
g_234 <- g2 + g3 + g4_padded + plot_layout(widths = c(4, 2, 1), heights = c(4, 4, 4))
g_234
g_234 <- g2 + g3 + g4_padded + plot_layout(widths = c(4, 2, 1))
g_234
g_234 <- g2 + g3 + g4_padded + plot_layout(widths = c(4, 2, 1))
g_234
